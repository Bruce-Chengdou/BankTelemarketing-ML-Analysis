plot(gam_previous, se =TRUE,col="darkblue")
gam_all<-gam(Bank_train$y~ s(Bank_train$previous, bs="re")+s(Bank_train$marital, bs="re")+s(Bank_train$education, bs="re")+s(Bank_train$default, bs="re")+s(Bank_train$housing, bs="re")+s(Bank_train$loan, bs="re")+s(Bank_train$contact, bs="re")+s(Bank_train$month, bs="re")+s(Bank_train$day_of_week, bs="re")+s(Bank_train$poutcome, bs="re")+s(Bank_train$job, bs="re")+s(Bank_train$age, bs="cr")+s(Bank_train$duration, bs="cr")+s(Bank_train$campaign, bs="cr")+s(Bank_train$pdays, bs="cr")+s(Bank_train$emp.var.rate, bs="cr")+s(Bank_train$cons.price.idx, bs="cr")+s(Bank_train$cons.conf.idx, bs="cr")+s(Bank_train$euribor3m, bs="cr")+s(Bank_train$nr.employed, bs="cr"),family="binomial",data=Bank_train)
plot(gam_all, se =TRUE,col="darkblue", pages=2)
prob_gam<-predict(gam_all, Bank_train, type="response")
prob_gam<-predict(gam_all, Bank_train, type="response")
data_index<- sample(nrow(df3),nrow(df3)*0.70)
Bank_train<- df3[data_index,]
Bank_test<- df3[-data_index,]
gam_all<-gam(df3$y~ s(df3$age, bs="cr")+s(df3$duration, bs="cr")+s(df3$campaign, bs="cr")+s(df3$pdays, bs="cr")+s(df3$emp.var.rate, bs="cr")+s(df3$cons.price.idx, bs="cr")+s(df3$cons.conf.idx, bs="cr")+s(df3$euribor3m, bs="cr")+s(df3$nr.employed, bs="cr"),family="binomial",data=Bank_train)
plot(gam_all, se =TRUE,col="darkblue", pages=1)
gam_all<-gam(Bank_train$y~ s(Bank_train$previous, bs="re")+s(Bank_train$marital, bs="re")+s(Bank_train$education, bs="re")+s(Bank_train$default, bs="re")+s(Bank_train$housing, bs="re")+s(Bank_train$loan, bs="re")+s(Bank_train$contact, bs="re")+s(Bank_train$month, bs="re")+s(Bank_train$day_of_week, bs="re")+s(Bank_train$poutcome, bs="re")+s(Bank_train$job, bs="re")+s(Bank_train$age, bs="cr")+s(Bank_train$duration, bs="cr")+s(Bank_train$campaign, bs="cr")+s(Bank_train$pdays, bs="cr")+s(Bank_train$emp.var.rate, bs="cr")+s(Bank_train$cons.price.idx, bs="cr")+s(Bank_train$cons.conf.idx, bs="cr")+s(Bank_train$euribor3m, bs="cr")+s(Bank_train$nr.employed, bs="cr"),family="binomial",data=Bank_train)
data_index<- sample(nrow(df3),nrow(df3)*0.70)
Bank_train<- df3[data_index,]
Bank_test<- df3[-data_index,]
gam_all<-gam(Bank_train$y~ s(Bank_train$previous, bs="re")+s(Bank_train$marital, bs="re")+s(Bank_train$education, bs="re")+s(Bank_train$default, bs="re")+s(Bank_train$housing, bs="re")+s(Bank_train$loan, bs="re")+s(Bank_train$contact, bs="re")+s(Bank_train$month, bs="re")+s(Bank_train$day_of_week, bs="re")+s(Bank_train$poutcome, bs="re")+s(Bank_train$job, bs="re")+s(Bank_train$age, bs="cr")+s(Bank_train$duration, bs="cr")+s(Bank_train$campaign, bs="cr")+s(Bank_train$pdays, bs="cr")+s(Bank_train$emp.var.rate, bs="cr")+s(Bank_train$cons.price.idx, bs="cr")+s(Bank_train$cons.conf.idx, bs="cr")+s(Bank_train$euribor3m, bs="cr")+s(Bank_train$nr.employed, bs="cr"),family="binomial",data=Bank_train)
plot(gam_all, se =TRUE,col="darkblue", pages=2)
pred_gam<-prediction(c(prob_gam), Bank_train$y)
prob_gam<-predict(gam_all, Bank_train, type="response")
gam_y<-gam(df3$y~ s(df3$y, bs="cr"),family="binomial",data=df3)
gam_y<-gam(df3$y~ s(df3$y, bs="re"),family="binomial",data=df3)
plot(gam_y, se =TRUE,col="darkblue")
gam_y<-gam(df3$y~ s(df3$y, bs="re"),family="binomial",data=df3)
plot(gam_y, se =TRUE,col="darkblue")
gam_all<-gam(Bank_train$y~ s(Bank_train$y, bs="re")+s(Bank_train$previous, bs="re")+s(Bank_train$marital, bs="re")+s(Bank_train$education, bs="re")+s(Bank_train$default, bs="re")+s(Bank_train$housing, bs="re")+s(Bank_train$loan, bs="re")+s(Bank_train$contact, bs="re")+s(Bank_train$month, bs="re")+s(Bank_train$day_of_week, bs="re")+s(Bank_train$poutcome, bs="re")+s(Bank_train$job, bs="re")+s(Bank_train$age, bs="cr")+s(Bank_train$duration, bs="cr")+s(Bank_train$campaign, bs="cr")+s(Bank_train$pdays, bs="cr")+s(Bank_train$emp.var.rate, bs="cr")+s(Bank_train$cons.price.idx, bs="cr")+s(Bank_train$cons.conf.idx, bs="cr")+s(Bank_train$euribor3m, bs="cr")+s(Bank_train$nr.employed, bs="cr"),family="binomial",data=Bank_train)
plot(gam_all, se =TRUE,col="darkblue", pages=2)
prob_gam<-predict(gam_all, Bank_train, type="response")
Bank_trainl=list(Bank_train)
Bank_trainl<-unlist(Bank_train)
prob_gam<-predict(gam_all, Bank_train, type="response")
prob_gam<-predict(gam_all, Bank_trainl, type="response")
Bank_trainl<-unlist(Bank_train)
prob_gam<-predict(gam_all, Bank_trainl, type="response")
prob_gam<-predict(gam_all, Bank_train, type="response")
View(gam_campaign)
View(gam_all)
prob_gam<-predict(gam_all, type="response")
pred_gam<-prediction(c(prob_gam), Bank_train$y)
perf_gam<-performance(pred_gam, "tpr", "fpr")
plot(perf_gam, colorize=TRUE)
plot(perf_gam, colorize=TRUE)
gam_all<-gam(Bank_train$y~ s(Bank_train$marital, bs="re")+s(Bank_train$education, bs="re")+s(Bank_train$default, bs="re")+s(Bank_train$housing, bs="re")+s(Bank_train$loan, bs="re")+s(Bank_train$contact, bs="re")+s(Bank_train$month, bs="re")+s(Bank_train$day_of_week, bs="re")+s(Bank_train$poutcome, bs="re")+s(Bank_train$job, bs="re")+s(Bank_train$age, bs="cr")+s(Bank_train$duration, bs="cr")+s(Bank_train$campaign, bs="cr")+s(Bank_train$pdays, bs="cr")+s(Bank_train$emp.var.rate, bs="cr")+s(Bank_train$cons.price.idx, bs="cr")+s(Bank_train$cons.conf.idx, bs="cr")+s(Bank_train$euribor3m, bs="cr")+s(Bank_train$nr.employed, bs="cr"),family="binomial",data=Bank_train)
plot(gam_all, se =TRUE,col="darkblue", pages=2)
prob_gam<-predict(gam_all, type="response")
pred_gam<-prediction(c(prob_gam), Bank_train$y)
perf_gam<-performance(pred_gam, "tpr", "fpr")
plot(perf_gam, colorize=TRUE)
gam_all<-gam(Bank_train$y~ s(Bank_train$age, bs="cr")+s(Bank_train$duration, bs="cr")+s(Bank_train$campaign, bs="cr")+s(Bank_train$pdays, bs="cr")+s(Bank_train$emp.var.rate, bs="cr")+s(Bank_train$cons.price.idx, bs="cr")+s(Bank_train$cons.conf.idx, bs="cr")+s(Bank_train$euribor3m, bs="cr")+s(Bank_train$nr.employed, bs="cr"),family="binomial",data=Bank_train)
plot(gam_all, se =TRUE,col="darkblue", pages=2)
prob_gam<-predict(gam_all, type="response")
pred_gam<-prediction(c(prob_gam), Bank_train$y)
perf_gam<-performance(pred_gam, "tpr", "fpr")
plot(perf_gam, colorize=TRUE)
gam_all<-gam(Bank_train$y~ s(Bank_train$marital, bs="re")+s(Bank_train$education, bs="re")+s(Bank_train$default, bs="re")+s(Bank_train$housing, bs="re")+s(Bank_train$loan, bs="re")+s(Bank_train$contact, bs="re")+s(Bank_train$month, bs="re")+s(Bank_train$day_of_week, bs="re")+s(Bank_train$poutcome, bs="re")+s(Bank_train$job, bs="re")+s(Bank_train$age, bs="cr")+s(Bank_train$duration, bs="cr")+s(Bank_train$campaign, bs="cr")+s(Bank_train$pdays, bs="cr")+s(Bank_train$emp.var.rate, bs="cr")+s(Bank_train$cons.price.idx, bs="cr")+s(Bank_train$cons.conf.idx, bs="cr")+s(Bank_train$euribor3m, bs="cr")+s(Bank_train$nr.employed, bs="cr"),family="binomial",data=Bank_train)
plot(gam_all, se =TRUE,col="darkblue", pages=2)
prob_gam<-predict(gam_all, type="response")
pred_gam<-prediction(c(prob_gam), Bank_train$y)
perf_gam<-performance(pred_gam, "tpr", "fpr")
plot(perf_gam, colorize=TRUE)
gam_all<-gam(Bank_train$y~ s(Bank_train$age, bs="cr")+s(Bank_train$duration, bs="cr")+s(Bank_train$campaign, bs="cr")+s(Bank_train$pdays, bs="cr")+s(Bank_train$emp.var.rate, bs="cr")+s(Bank_train$cons.price.idx, bs="cr")+s(Bank_train$cons.conf.idx, bs="cr")+s(Bank_train$euribor3m, bs="cr")+s(Bank_train$nr.employed, bs="cr"),family="binomial",data=Bank_train)
plot(gam_all, se =TRUE,col="darkblue", pages=1)
prob_gam<-predict(gam_all, type="response")
pred_gam<-prediction(c(prob_gam), Bank_train$y)
perf_gam<-performance(pred_gam, "tpr", "fpr")
plot(perf_gam, colorize=TRUE)
unlist(slot(performance(pred_gam, "auc"),"y.values"))
gam_all<-gam(Bank_train$y~ s(Bank_train$marital, bs="re")+s(Bank_train$education, bs="re")+s(Bank_train$default, bs="re")+s(Bank_train$housing, bs="re")+s(Bank_train$loan, bs="re")+s(Bank_train$contact, bs="re")+s(Bank_train$month, bs="re")+s(Bank_train$day_of_week, bs="re")+s(Bank_train$poutcome, bs="re")+s(Bank_train$job, bs="re")+s(Bank_train$age, bs="cr")+s(Bank_train$duration, bs="cr")+s(Bank_train$campaign, bs="cr")+s(Bank_train$pdays, bs="cr")+s(Bank_train$emp.var.rate, bs="cr")+s(Bank_train$cons.price.idx, bs="cr")+s(Bank_train$cons.conf.idx, bs="cr")+s(Bank_train$euribor3m, bs="cr")+s(Bank_train$nr.employed, bs="cr"),family="binomial",data=Bank_train)
plot(gam_all, se =TRUE,col="darkblue", pages=2)
prob_gam<-predict(gam_all, type="response")
pred_gam<-prediction(c(prob_gam), Bank_train$y)
perf_gam<-performance(pred_gam, "tpr", "fpr")
plot(perf_gam, colorize=TRUE)
unlist(slot(performance(pred_gam, "auc"),"y.values"))
gam_all<-gam(Bank_train$y~ s(Bank_train$age, bs="cr")+s(Bank_train$duration, bs="cr")+s(Bank_train$campaign, bs="cr")+s(Bank_train$pdays, bs="cr")+s(Bank_train$emp.var.rate, bs="cr")+s(Bank_train$cons.price.idx, bs="cr")+s(Bank_train$cons.conf.idx, bs="cr")+s(Bank_train$euribor3m, bs="cr")+s(Bank_train$nr.employed, bs="cr"),family="binomial",data=Bank_train)
plot(gam_all, se =TRUE,col="darkblue", pages=1)
prob_gam<-predict(gam_all, type="response")
pred_gam<-prediction(c(prob_gam), Bank_train$y)
perf_gam<-performance(pred_gam, "tpr", "fpr")
plot(perf_gam, colorize=TRUE)
unlist(slot(performance(pred_gam, "auc"),"y.values"))
#Tree
library(tree)
#Tree
install.packages(“tree”)
#Tree
install.packages(“tree”)
#Tree
install.packages(tree)
#Tree
install.packages("tree")
library(tree)
library(cowplot)
install.packages("ggplot2")
install.packages("ggplot2")
library(cowplot)
install.packages("cowplot")
library(cowplot)
library(randomForest)
install.packages("randomForest")
library(randomForest)
library(randomForest)
str(df3)
str(df2)
set.seed(42)
daya.imputed<-rflmput(df3$y~., data=df3, iter=6)
daya.imputed<-rfImpute(df3$y~., data=df3, iter=6)
daya.imputed<-rfImpute(y~., data=df3, iter=6)
daya.imputed<-rfImpute(df2$y~., data=df2, iter=6)
daya.imputed<-rfImpute(y~., data=df2, iter=6)
daya.imputed<-rfImpute(y~., data=df3, iter=6)
daya.imputed<-rfImpute(df3$y~., data=df3, iter=6)
set.seed(42)
data_index<- sample(nrow(df3),nrow(df3)*0.70)
Bank_train<- df3[data_index,]
Bank_test<- df3[-data_index,]
tree.df3=tree(df3$y~., Bank_train)
library(tree)
tree.df3=tree(df3$y~., Bank_train)
tree.df3=tree(y~., Bank_train)
summary(tree.df3)
plot(tree.df3)
tree.df3=tree(y~., Bank_train)
summary(tree.df3)
plot(tree.df3)
text(tree.df3, pretty = 0)
yhat=predict(tree.df3,Bank_test)
mean((yhat -Bank_test$y)^2)
cv.df3 =cv.tree(tree.df3)
plot(cv.df3)
cv.df3 =cv.tree(tree.df3)
plot(cv.df3)
prune.df3 =prune.tree(tree.df3 ,best =6)
plot(prune.df3)
prune.df3 =prune.tree(tree.df3 ,best =6)
plot(prune.df3)
text(prune.df3,pretty =0)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
set.seed(126)
bag.df3 =randomForest(y~.,data=Bank_train,mtry=13, ntree=10, importance =TRUE)
bag.df3
set.seed(472)
bag.df3 =randomForest(y~.,data=Bank_train,mtry=13, ntree=10, importance =TRUE)
bag.df3
set.seed(261)
bag.df3 =randomForest(y~.,data=Bank_train,mtry=20, ntree=10, importance =TRUE)
bag.df3
set.seed(261)
bag.df3 =randomForest(y~.,data=Bank_train,mtry=20, ntree=11, importance =TRUE)
bag.df3
set.seed(261)
bag.df3 =randomForest(y~.,data=Bank_train,mtry=20, ntree=15, importance =TRUE)
bag.df3
pred.bag = predict (bag.df3,newdata =Bank_test)
plot(pred.bag , Bank_test$y)
abline (0,1)
pred.bag = predict (bag.df3,newdata =Bank_test)
plot(pred.bag , Bank_test$y)
abline (0,1)
mean(( pred.bag -Bank_test$y)^2)
tree.roc<-roc(Bank_test$y, yhat)
#tree ROC and AUC
library(pROC)
#tree ROC and AUC
install.packages("pROC")
library(pROC)
tree.roc<-roc(Bank_test$y, yhat)
print(tree.roc)
plot(tree.roc)
pred_tree<-prediction(c(yhat), Bank_train$y)
plot(tree.roc,colorize=TRUE)
plot(tree.roc,colorize=TRUE,xlab = "False Positive Rate", ylab = "True positive Rate")
plot(tree.roc,main="ROC Curve",col=2,lwd=2,xlab = "False Positive Rate", ylab = "True positive Rate")
auc(Bank_testA$y,yhat)
auc(Bank_test$y,yhat)
tree.roc<-roc(Bank_test$y, pred.cart)
print(tree.roc)
plot(tree.roc,main="ROC Curve",col=2,lwd=2,xlab = "False Positive Rate", ylab = "True positive Rate")
auc(Bank_test$y,pred.cart)
tree.roc<-roc(Bank_test$y, pred.bag)
print(tree.roc)
plot(tree.roc,main="ROC Curve",col=2,lwd=2,xlab = "False Positive Rate", ylab = "True positive Rate")
auc(Bank_test$y,pred.bag)
plot(pred.bag , Bank_test$y)
gam_age<-gam(df3$y~ s(df3$age, bs="cr"),family="binomial",data=df3)
#GAM
library(gam)
df3=data.frame(df2[,-21], y=as.integer(df2$y)-1)
gam_age<-gam(df3$y~ s(df3$age, bs="cr"),family="binomial",data=df3)
library(mgcv)
gam_age<-gam(df3$y~ s(df3$age, bs="cr"),family="binomial",data=df3)
plot(gam_age, se =TRUE,col="darkblue")
library(mgcv)
df3=data.frame(df2[,-21], y=as.integer(df2$y)-1)
gam_age<-gam(df3$y~ s(df3$age, bs="cr"),family="binomial",data=df3)
plot(gam_age, se =TRUE,col="darkblue")
gam_duration<-gam(df3$y~ s(df3$duration, bs="cr"),family="binomial",data=df3)
plot(gam_duration, se =TRUE,col="darkblue")
gam_campaign<-gam(df3$y~ s(df3$campaign, bs="cr"),family="binomial",data=df3)
plot(gam_campaign, se =TRUE,col="darkblue")
gam_pdays<-gam(df3$y~ s(df3$pdays, bs="cr"),family="binomial",data=df3)
plot(gam_pdays, se =TRUE,col="darkblue")
gam_previous<-gam(df3$y~ s(df3$previous, bs="re"),family="binomial",data=df3)
plot(gam_previous, se =TRUE,col="darkblue")
gam_emp.var.rate<-gam(df3$y~ s(df3$emp.var.rate, bs="cr"),family="binomial",data=df3)
plot(gam_emp.var.rate, se =TRUE,col="darkblue")
gam_cons.price.idx<-gam(df3$y~ s(df3$cons.price.idx, bs="cr"),family="binomial",data=df3)
plot(gam_cons.price.idx, se =TRUE,col="darkblue")
gam_cons.conf.idx<-gam(df3$y~ s(df3$cons.conf.idx, bs="cr"),family="binomial",data=df3)
plot(gam_cons.conf.idx, se =TRUE,col="darkblue")
gam_euribor3m<-gam(df3$y~ s(df3$euribor3m, bs="cr"),family="binomial",data=df3)
plot(gam_euribor3m, se =TRUE,col="darkblue")
gam_nr.employed<-gam(df3$y~ s(df3$nr.employed, bs="cr"),family="binomial",data=df3)
plot(gam_nr.employed, se =TRUE,col="darkblue")
library(ROCR)
library(tree)
library(cowplot)
set.seed(42)
data_index<- sample(nrow(df3),nrow(df3)*0.70)
Bank_train<- df3[data_index,]
Bank_test<- df3[-data_index,]
tree.df3=tree(y~., Bank_train)
summary(tree.df3)
plot(tree.df3)
text(tree.df3, pretty = 0)
yhat=predict(tree.df3,Bank_test)
mean((yhat -Bank_test$y)^2)
cv.df3 =cv.tree(tree.df3)
plot(cv.df3)
prune.df3 =prune.tree(tree.df3 ,best =6)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
set.seed(42)
data_index<- sample(nrow(df3),nrow(df3)*0.70)
Bank_train<- df3[data_index,]
Bank_test<- df3[-data_index,]
tree.df3=tree(y~., Bank_train)
summary(tree.df3)
plot(tree.df3)
text(tree.df3, pretty = 0)
yhat=predict(tree.df3,Bank_test)
mean((yhat -Bank_test$y)^2)
cv.df3 =cv.tree(tree.df3)
plot(cv.df3)
prune.df3 =prune.tree(tree.df3 ,best =6)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
prune.df3 =prune.tree(tree.df3 ,best =6)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
#randomForest
library(randomForest)
et.seed(261)
set.seed(261)
bag.df3 =randomForest(y~.,data=Bank_train,mtry=20, ntree=15, importance =TRUE)
bag.df3
pred.bag = predict (bag.df3,newdata =Bank_test)
plot(pred.bag , Bank_test$y)
abline (0,1)
mean(( pred.bag -Bank_test$y)^2)
tree.roc<-roc(Bank_test$y, yhat)
print(tree.roc)
plot(tree.roc,main="ROC Curve",col=2,lwd=2,xlab = "False Positive Rate", ylab = "True positive Rate")
auc(Bank_test$y,yhat)
tree.roc<-roc(Bank_test$y, pred.cart)
print(tree.roc)
plot(tree.roc,main="ROC Curve",col=2,lwd=2,xlab = "False Positive Rate", ylab = "True positive Rate")
auc(Bank_test$y,pred.cart)
tree.roc<-roc(Bank_test$y, pred.bag)
print(tree.roc)
plot(tree.roc,main="ROC Curve",col=2,lwd=2,xlab = "False Positive Rate", ylab = "True positive Rate")
auc(Bank_test$y,pred.bag)
#boosted regression trees
library (gbm)
#boosted regression trees
install.packages("gbm")
library (gbm)
set.seed (517)
boost.df3 =gbm(y~.,data=Bank_train, distribution="gaussian",
n.trees =1000, interaction.depth =2)
summary(boost.df3)
set.seed (517)
boost.df3 =gbm(y~.,data=Bank_train, distribution="bernoulli",
n.trees =1000, interaction.depth =2)
summary(boost.df3)
pred.boost=predict(boost.df3,newdata =Bank_test, n.trees =1000)
mean((pred.boost-Bank_test$y)^2)
tree.roc<-roc(Bank_test$y, pred.boost)
print(tree.roc)
plot(tree.roc,main="ROC Curve",col=2,lwd=2,xlab = "False Positive Rate", ylab = "True positive Rate")
auc(Bank_test$y,pred.boost)
set.seed(261)
bag.df3 =randomForest(y~.,data=Bank_train,mtry=20, ntree=15, importance =TRUE)
bag.df3
rf.df3=randomForest(y~., data=Bank_train, mtry=4, ntree=100, importance=TRUE)
pred.rf = predict (rf.df3,newdata =Bank_test)
mean(( pred.rf -Bank_test$y)^2)
importance(rf.df3)
varImpPlot(rf.df3)
set.seed(42)
data_index<- sample(nrow(df3),nrow(df3)*0.70)
Bank_train<- df3[data_index,]
Bank_test<- df3[-data_index,]
tree.df3=tree(y~., Bank_train)
summary(tree.df3)
plot(tree.df3)
text(tree.df3, pretty = 0)
yhat=predict(tree.df3,Bank_test)
mean((yhat -Bank_test$y)^2)
cv.df3 =cv.tree(tree.df3)
plot(cv.df3)
prune.df3 =prune.tree(tree.df3 ,best =4)
plot(prune.df3)
prune.df3 =prune.tree(tree.df3 ,best =4)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
prune.df3 =prune.tree(tree.df3 ,best =9)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
set.seed(42)
data_index<- sample(nrow(df3),nrow(df3)*0.70)
Bank_train<- df3[data_index,]
Bank_test<- df3[-data_index,]
tree.df3=tree(y~., Bank_train)
summary(tree.df3)
plot(tree.df3)
text(tree.df3, pretty = 0)
yhat=predict(tree.df3,Bank_test)
mean((yhat -Bank_test$y)^2)
cv.df3 =cv.tree(tree.df3)
plot(cv.df3)
prune.df3 =prune.tree(tree.df3 ,best =9)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
prune.df3 =prune.tree(tree.df3 ,best =4)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
prune.df3 =prune.tree(tree.df3 ,best =3)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
prune.df3 =prune.tree(tree.df3 ,best =5)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
prune.df3 =prune.tree(tree.df3 ,best =4)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
prune.df3 =prune.tree(tree.df3 ,best =9)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
prune.df3 =prune.tree(tree.df3 ,best =10)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
prune.df3 =prune.tree(tree.df3 ,best =8)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
prune.df3 =prune.tree(tree.df3 ,best =6)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
cv.df3 =cv.tree(tree.df3)
plot(cv.df3)
prune.df3 =prune.tree(tree.df3 ,best =8)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
prune.df3 =prune.tree(tree.df3 ,best =7)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
prune.df3 =prune.tree(tree.df3 ,best =6)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
prune.df3 =prune.tree(tree.df3 ,best =5)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
prune.df3 =prune.tree(tree.df3 ,best =4)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
prune.df3 =prune.tree(tree.df3 ,best =6)
plot(prune.df3)
pred.cart=predict(prune.df3,Bank_test)
mean((pred.cart -Bank_test$y)^2)
text(prune.df3,pretty =0)
tree.roc<-roc(Bank_test$y, pred.cart)
print(tree.roc)
plot(tree.roc,main="ROC Curve",col=2,lwd=2,xlab = "False Positive Rate", ylab = "True positive Rate")
auc(Bank_test$y,pred.cartg)
tree.roc<-roc(Bank_test$y, pred.cart)
print(tree.roc)
plot(tree.roc,main="ROC Curve",col=2,lwd=2,xlab = "False Positive Rate", ylab = "True positive Rate")
auc(Bank_test$y,pred.cart)
set.seed (517)
boost.df3 =gbm(y~.,data=Bank_train, distribution="bernoulli",
n.trees =1000, interaction.depth =2)
summary(boost.df3)
pred.boost=predict(boost.df3,newdata =Bank_test, n.trees =1000)
mean((pred.boost-Bank_test$y)^2)
tree.roc<-roc(Bank_test$y, pred.boost)
print(tree.roc)
plot(tree.roc,main="ROC Curve",col=2,lwd=2,xlab = "False Positive Rate", ylab = "True positive Rate")
auc(Bank_test$y,pred.boost)
importance(rf.df3)
varImpPlot(rf.df3)
set.seed (517)
boost.df3 =gbm(y~.,data=Bank_train, distribution="bernoulli",
n.trees =1000, interaction.depth =2)
summary(boost.df3)
pred.boost=predict(boost.df3,newdata =Bank_test, n.trees =1000)
mean((pred.boost-Bank_test$y)^2)
tree.roc<-roc(Bank_test$y, pred.boost)
print(tree.roc)
plot(tree.roc,main="ROC Curve",col=2,lwd=2,xlab = "False Positive Rate", ylab = "True positive Rate")
auc(Bank_test$y,pred.boost)
set.seed (517)
boost.df3 =gbm(y~.,data=Bank_train, distribution="bernoulli",
n.trees =1000, interaction.depth =2)
summary(boost.df3)
boost.df3 =gbm(y~.,data=Bank_train, distribution="bernoulli",
n.trees =1000, interaction.depth =2)
summary(boost.df3)
boost.df3 =gbm(y~.,data=Bank_train, distribution="bernoulli",
n.trees =1000, interaction.depth =2)
summary(boost.df3)
importance(rf.df3)
varImpPlot(rf.df3)
mean(( pred.bag -Bank_test$y)^2)
pred.bag = predict (bag.df3,newdata =Bank_test)
plot(pred.bag , Bank_test$y)
abline (0,1)
set.seed(261)
bag.df3 =randomForest(y~.,data=Bank_train,mtry=20, ntree=15, importance =TRUE)
bag.df3
set.seed(261)
bag.df3 =randomForest(y~.,data=Bank_train,mtry=10, ntree=15, importance =TRUE)
bag.df3
pred.bag = predict (bag.df3,newdata =Bank_test)
plot(pred.bag , Bank_test$y)
abline (0,1)
set.seed(261)
bag.df3 =randomForest(y~.,data=Bank_train,mtry=10, ntree=9, importance =TRUE)
bag.df3
pred.bag = predict (bag.df3,newdata =Bank_test)
plot(pred.bag , Bank_test$y)
abline (0,1)
set.seed(261)
bag.df3 =randomForest(y~.,data=Bank_train,mtry=20, ntree=17, importance =TRUE)
bag.df3
pred.bag = predict (bag.df3,newdata =Bank_test)
plot(pred.bag , Bank_test$y)
abline (0,1)
set.seed(261)
bag.df3 =randomForest(y~.,data=Bank_train,mtry=20, ntree=15, importance =TRUE)
bag.df3
pred.bag = predict (bag.df3,newdata =Bank_test)
plot(pred.bag , Bank_test$y)
abline (0,1)
mean(( pred.bag -Bank_test$y)^2)
sum(is.na(bank.additional))
dim(bank.additional)
length(bank.additional)
boxplot(df2$nr.employed, main="nr.employed_Boxplot", ylab="nr.employed")
boxplot.stats(df2$nr.employed)
set.seed(42)
data_index<- sample(nrow(df3),nrow(df3)*0.70)
Bank_train<- df3[data_index,]
Bank_test<- df3[-data_index,]
tree.df3=tree(y~., Bank_train)
summary(tree.df3)
plot(tree.df3)
text(tree.df3, pretty = 0)
yhat=predict(tree.df3,Bank_test)
mean((yhat -Bank_test$y)^2)
set.seed (517)
boost.df3 =gbm(y~.,data=Bank_train, distribution="bernoulli",
n.trees =1000, interaction.depth =2)
summary(boost.df3)
pred.boost=predict(boost.df3,newdata =Bank_test, n.trees =1000)
mean((pred.boost-Bank_test$y)^2)
View(bank.additional)
View(df2)
